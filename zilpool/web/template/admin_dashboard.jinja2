{% extends "base.jinja2" %}
{% block css %}
{% endblock %}

{% block body %}
{{ super() }}
<section class="text-center pt-5 pb-4">
  <div class="container">
    <div class="row mx-auto">
      {% if not visa %}
      <div class="col-12 alert alert-danger fixed-font">
        Invalid Login Credentials
      </div>
      {% else %}
      <div class="col mx-auto">
        <ul class="nav nav-tabs" role="tablist">
          <li class="nav-item">
            <a class="nav-link active" id="settings-tab" data-toggle="tab" href="#settings" role="tab"
               aria-selected="true">Settings</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="miners-tab" data-toggle="tab" href="#miners" role="tab"
               aria-selected="false">Miners ({{ summary.miners }})</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="nodes-tab" data-toggle="tab" href="#nodes" role="tab"
               aria-selected="false">Nodes ({{ summary.nodes.all }})</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="rewards-tab" data-toggle="tab" href="#rewards" role="tab"
               aria-selected="false">Rewards</a>
          </li>
        </ul>
        <div class="tab-content">
          <div class="tab-pane fade show active" id="settings" role="tabpanel" aria-labelledby="settings-tab">
            <!-- Settings -->
            <div class="card text-left mt-3">
              <div class="card-body">
                <h6 class="card-subtitle mb-2">Website Settings</h6>
                <div class="form-group row">
                  <label for="notification" class="col-lg-2 col-form-label">Notification</label>
                  <div class="col-lg-6 mb-2">
                    <input type="text" class="form-control" id="notification"
                           value="{{ config.site_settings.notification }}">
                  </div>
                  <label class="col col-lg-2">
                    <button id="update_notification" type="submit" class="btn btn-primary w-100">Update</button>
                  </label>
                </div>
              </div>
            </div>
            <div class="card text-left mt-3">
              <div class="card-body">
                <h6 class="card-subtitle mb-2">Mining Settings</h6>
                <div class="form-group row">
                  <label for="max_dispatch" class="col-lg-2 col-form-label">Max Dispatch Count</label>
                  <div class="col-lg-2">
                    <input type="number" class="form-control" id="max_dispatch"
                           value="{{ config.site_settings.max_dispatch }}">
                  </div>
                  <label class="col col-form-label">max dispatch count per work</label>
                </div>
                <div class="form-group row">
                  <label for="min_fee" class="col-lg-2 col-form-label">Min PoW Fee</label>
                  <div class="col-lg-2">
                    <input type="number" class="form-control" id="min_fee"
                           value="{{ config.site_settings.min_fee }}">
                  </div>
                  <label class="col col-form-label">work will not dispatch if pow_fee < min_fee, in ZILs/work </label>
                </div>
                <div class="form-group row">
                  <label for="inc_expire" class="col-lg-2 col-form-label">Increase Expire</label>
                  <div class="col-lg-2">
                    <input type="number" class="form-control" id="inc_expire"
                           value="{{ config.site_settings.inc_expire }}">
                  </div>
                  <label class="col col-form-label">increase work's expired time when it dispatched, in seconds</label>
                </div>
                <div class="form-group row">
                  <div class="col-lg-2"></div>
                  <div class="col-lg-2">
                    <button id="update_mining_settings" type="submit" class="btn btn-primary w-100">Update</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="tab-pane fade" id="miners" role="tabpanel" aria-labelledby="miners-tab">
            <!-- Miners -->
            <form class="form-inline mt-3">
              <div class="col-lg-6 col-sm-6">
                <input id="miner_email_or_addr" type="text" class="w-100 form-control"
                       placeholder="Miner Email or Address">
              </div>
              <div class="col-lg-1 col-sm-1">
                <a class="btn btn-warning" href="javascript:miners_query(0);">Show</a>
              </div>
            </form>
            <table class="table table-hover table-bordered mt-3">
              <thead class="bg-warning text-white">
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">Wallet Address</th>
                  <th scope="col">Email</th>
                  <th scope="col">Workers</th>
                  <th scope="col">Submitted</th>
                  <th scope="col">Accepted</th>
                  <!--th scope="col">Rewards</th>
                  <th scope="col">UnPaid</th-->
                </tr>
              </thead>
              <tbody id="miners_list">
              </tbody>
            </table>
            <nav>
              <ul id="miners_pager" class="pagination justify-content-center">
              </ul>
            </nav>
          </div>
          <div class="tab-pane fade" id="nodes" role="tabpanel" aria-labelledby="nodes-tab">
            <!-- Nodes -->
            <form class="form-inline mt-3">
              <div class="col-lg-8 col-sm-8">
                <input id="node_email_or_key" type="text" class="w-100 form-control"
                       placeholder="Node Email or Public Key">
              </div>
              <div class="col-lg-1 col-sm-1">
                <a class="btn btn-secondary" href="javascript:nodes_query(0);">Show</a>
              </div>
            </form>
            <table class="table table-hover table-bordered mt-3">
              <thead class="bg-dark text-white">
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">Node Public Key</th>
                  <th scope="col">Email</th>
                  <th scope="col">Authorized?</th>
                  <th scope="col">PoW Fee</th>
                  <th scope="col">Total Works</th>
                  <th scope="col">Finished</th>
                  <th scope="col">Verified</th>
                  <th scope="col">Actions</th>
                </tr>
              </thead>
              <tbody id="nodes_list">
              </tbody>
            </table>
            <nav>
              <ul id="nodes_pager" class="pagination justify-content-center">
              </ul>
            </nav>
          </div>

          <div class="tab-pane fade" id="rewards" role="tabpanel" aria-labelledby="rewards-tab">
            <!-- Rewards -->
            <table class="table table-hover table-bordered mt-3">
              <thead class="">
                <tr>
                  <th scope="col">Block #</th>
                  <th scope="col">Date</th>
                  <th scope="col">Miner</th>
                  <th scope="col">Rewards</th>
                  <th scope="col">Finished</th>
                  <th scope="col">Verified</th>
                </tr>
              </thead>
              <tbody id="rewards_list">
              </tbody>
            </table>
            <nav>
              <ul id="rewards_pager" class="pagination justify-content-center">
              </ul>
            </nav>
            <div class="card-body text-left">
              <h6 class="card-subtitle mb-2">Export Rewards</h6>
              <form target="_blank" method="post" action="{{ root_path }}admin/export/rewards">
                <div class="form-group row">
                  <label for="block_num" class="col-lg-2 col-form-label">Blocks</label>
                  <div class="col-lg-3 mb-2">
                    <input type="text" class="form-control" id="block_num"
                           name="block_num" value="0-10" placeholder="0-10">
                  </div>
                  <label class="col col-lg-2">
                    <input type="hidden" name="visa" value="{{ visa }}">
                    <button type="submit" class="btn btn-primary">Export CSV</button>
                  </label>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      {% endif %}
    </div>
  </div>
</section>
{% endblock %}

{% block script %}
<script src="{{ root_path }}static/vendor/bootstrap-notify.js"></script>
<script>
let visa = "{{ visa }}";

function show_msg(msg, style) {
  $.notify({
    message: msg
  },{
    delay: 3000,
    type: style || "success"
  });
}

function update_callback(result, action) {
  if (!result) {
    show_msg("Failed " + action, "danger");
  } else {
    show_msg("Success!");
  }
}

function admin_api(action, callback, ...params) {
  jsonrpc(
    "{{ config.api_server.path }}",
    action,
    [visa, ...params],
    function (result) {
      callback(result, action);
    },
    function (error) {
      show_msg(error, "danger");
    }
  );
}

/****************
/ Miners
*****************/
let per_page = {{ per_page }};
let pagers_count = 5;

let miner_cur_page = 0;
let total_miners = {{ summary.miners }};
let miner_max_page = Math.trunc((total_miners + per_page - 1)  / per_page);
if (miner_max_page > 0) {
  miner_max_page -= 1;
}

function build_miner_pager() {
  let $miners_pager = $("#miners_pager");
  $miners_pager.empty();

  let prev = `<li class="page-item ${miner_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link miner_pager" data-page="0" href="javascript:void(0);">First</a>
  </li><li class="page-item ${miner_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link miner_prev" href="javascript:void(0);">Previous</a>
  </li>`;

  let next = `<li class="page-item ${miner_cur_page >= miner_max_page ? 'disabled' : ''}">
    <a class="page-link miner_next" href="javascript:void(0);">Next</a>
  </li><li class="page-item ${miner_cur_page >= miner_max_page ? 'disabled' : ''}">
    <a class="page-link miner_pager" data-page="${miner_max_page}" href="javascript:void(0);">Last</a>
  </li>`;

  let start_page = Math.trunc(miner_cur_page/pagers_count) * pagers_count;
  let end_page = Math.min(start_page + pagers_count, miner_max_page);

  let pagers = "";
  for (let i=start_page; i <= end_page; i++) {
    pagers += `<li class="page-item ${miner_cur_page === i ? 'active' : ''}">
<a class="page-link miner_pager" data-page="${i}" href="javascript:void(0);">${i+1}</a></li>`;
  }

  $miners_pager.append(prev + pagers + next);

  $(".miner_prev").click(function () {
    miners_query(miner_cur_page - 1);
  });

  $(".miner_next").click(function () {
    miners_query(miner_cur_page + 1);
  });

  $(".miner_pager").click(function () {
    let $pager = $(this);
    let data_page = parseInt($pager.attr("data-page"));
    miners_query(data_page);
  });
}

function show_miner_page(miners) {
  let $miners_list = $("#miners_list");
  $miners_list.empty();
  let miner_num = miner_cur_page * per_page;

  for (let miner of miners) {
    miner_num += 1;
    let miner_template = `<tr>
<th scope="row">${miner_num}</th>
<td class="fixed-font"><a href="{{ root_path }}miner/${miner.wallet_address}" target="_blank">${miner.wallet_address}</a></td>
<td>${miner.email}</td>
<td>${miner.workers.length}</td>
<td>${miner.works.work_submitted}</td>
<td>${miner.works.work_finished}</td>
<!--td>${miner.rewards}</td>
<td>${miner.rewards - miner.paid}</td-->
</tr>`;
    $miners_list.append(miner_template);
  }
}

function miners_callback(result, action) {
  if (result) {
    show_miner_page(result);
    build_miner_pager();
  } else {
    show_msg("no more miners", "warning");
  }
}

function miners_query(page) {
  miner_cur_page = page;
  let order_by = null;
  let filters = null;

  let search_str = $.trim($("#miner_email_or_addr").val());

  if (search_str.length > 0) {
    let valid_address = valid_hex_str(search_str, 42);
    if (valid_address) {
      filters = {wallet_address: valid_address};
    } else {
      filters = {email: search_str};
    }
  }

  // query and show miners
  admin_api("admin_list_miners", miners_callback, miner_cur_page, per_page,
            order_by, filters);
}

/****************
/ Nodes
*****************/

let nodes_cur_page = 0;
let total_nodes = {{ summary.nodes.all }};
let nodes_max_page = Math.trunc((total_nodes + per_page - 1)  / per_page);
if (nodes_max_page > 0) {
  nodes_max_page -= 1;
}

function build_node_pager() {
  let $nodes_pager = $("#nodes_pager");
  $nodes_pager.empty();

  let prev = `<li class="page-item ${nodes_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link nodes_pager" data-page="0" href="javascript:void(0);">First</a>
  </li><li class="page-item ${nodes_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link nodes_prev" href="javascript:void(0);">Previous</a>
  </li>`;

  let next = `<li class="page-item ${nodes_cur_page >= nodes_max_page ? 'disabled' : ''}">
    <a class="page-link nodes_next" href="javascript:void(0);">Next</a>
  </li><li class="page-item ${nodes_cur_page >= nodes_max_page ? 'disabled' : ''}">
    <a class="page-link nodes_pager" data-page="${nodes_max_page}" href="javascript:void(0);">Last</a>
  </li>`;

  let start_page = Math.trunc(nodes_cur_page/pagers_count) * pagers_count;
  let end_page = Math.min(start_page + pagers_count, nodes_max_page);
  let pages_arr = numberRange(start_page, end_page + 1);

  let pagers = "";

  for (let i of pages_arr) {
    pagers += `<li class="page-item ${nodes_cur_page === i ? 'active' : ''}">
<a class="page-link nodes_pager" data-page="${i}" href="javascript:void(0);">${i+1}</a></li>`;
  }

  $nodes_pager.append(prev + pagers + next);

  $(".nodes_prev").click(function () {
    nodes_query(nodes_cur_page - 1);
  });

  $(".nodes_next").click(function () {
    nodes_query(nodes_cur_page + 1);
  });

  $(".nodes_pager").click(function () {
    let $pager = $(this);
    let data_page = parseInt($pager.attr("data-page"));
    nodes_query(data_page);
  });
}

function show_nodes_page(nodes) {
  let $nodes_list = $("#nodes_list");
  $nodes_list.empty();

  let nodes_num = nodes_cur_page * per_page;
  for (let node of nodes) {
    nodes_num += 1;
    let node_template = $(`<tr>
<th scope="row">${nodes_num}</th>
<td class="fixed-font"><a href="{{ root_path }}node/${node.pub_key}" target="_blank">
${node.pub_key}</a></td>
<td>${node.email}</td>
<td>${node.authorized}</td>
<td>${node.pow_fee}</td>
<td>${node.works.all}</td>
<td>${node.works.finished}</td>
<td>${node.works.verified}</td>
</tr>`);

    let $btn_action = $(`<td>
<button type="button" class="btn btn-primary btn-sm ${node.authorized ? "btn-danger" : "btn-warning"}">
${node.authorized ? "Revoke" : "Approve"}
</button></td>`)
    node_template.append($btn_action);

    $btn_action.click(function () {
      let action = node.authorized ? "admin_revoke_node" : "admin_approve_node";
      admin_api(action, function(result, action){
        nodes_query(nodes_cur_page);
      }, node.pub_key);
    });

    $nodes_list.append(node_template);
  }
}

function nodes_callback(result, action) {
  if (result) {
    show_nodes_page(result);
    build_node_pager();
  } else {
    show_msg("no more node", "warning");
  }
}

function nodes_query(page) {
  nodes_cur_page = page;
  let order_by = null;
  let filters = null;

  let search_str = $.trim($("#node_email_or_key").val());

  if (search_str.length > 0) {
    let valid_pub_key = valid_hex_str(search_str, 68);
    if (valid_pub_key) {
      filters = {pub_key: valid_pub_key};
    } else {
      filters = {email: search_str};
    }
  }
  // query and show nodes
  admin_api("admin_list_nodes", nodes_callback, nodes_cur_page, per_page,
            order_by, filters);
}

/****************
/ Rewards
*****************/
let blocks_per_page = 10;
let rewards_cur_page = 0;
let total_blocks = {{ current.block_num + 1 }};
let rewards_max_page = Math.trunc((total_blocks + blocks_per_page - 1)  / blocks_per_page);
if (rewards_max_page > 0) {
  rewards_max_page -= 1;
}

function show_rewards_page(rewards) {
  let $rewards_list = $("#rewards_list");
  $rewards_list.empty();
  let i = 0;

  for (let block_rewards of rewards) {
    let c = i++ % 2 ? "bg-striped": "";

    if (block_rewards["rewards"].length > 0) {
      for (let miner_reward of block_rewards["rewards"]) {
        let reward_template = $(`<tr class="${c}">
          <th scope="row">${miner_reward.block_num}</th>
          <td>${miner_reward.date}</td>
          <td class="fixed-font"><a href="{{ root_path }}miner/${miner_reward.miner_wallet}" target="_blank">
          ${miner_reward.miner_wallet}</a></td>
          <td>${miner_reward.rewards}</td>
          <td>${miner_reward.finished}</td>
          <td>${miner_reward.verified}</td>
        </tr>`
        );
        $rewards_list.append(reward_template);
      }
    } else {
      $rewards_list.append(`<tr class="${c}">
          <th scope="row">${block_rewards.block_num}</th>
          <td>${block_rewards.date}</td>
          <td></td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>`);
    }
  }
}

function build_rewards_pager() {
  let $rewards_pager = $("#rewards_pager");
  $rewards_pager.empty();

  let prev = `<li class="page-item ${rewards_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link rewards_pager" data-page="0" href="javascript:void(0);">First</a>
  </li><li class="page-item ${rewards_cur_page === 0 ? 'disabled' : ''}">
    <a class="page-link rewards_prev" href="javascript:void(0);">Previous</a>
  </li>`;

  let next = `<li class="page-item ${rewards_cur_page >= rewards_max_page ? 'disabled' : ''}">
    <a class="page-link rewards_next" href="javascript:void(0);">Next</a>
  </li><li class="page-item ${rewards_cur_page >= rewards_max_page ? 'disabled' : ''}">
    <a class="page-link rewards_pager" data-page="${rewards_max_page}" href="javascript:void(0);">Last</a>
  </li>`;

  let start_page = Math.trunc(rewards_cur_page/pagers_count) * pagers_count;
  let end_page = Math.min(start_page + pagers_count, rewards_max_page);
  let pages_arr = numberRange(start_page, end_page + 1);

  let pagers = "";

  for (let i of pages_arr) {
    pagers += `<li class="page-item ${rewards_cur_page === i ? 'active' : ''}">
<a class="page-link rewards_pager" data-page="${i}" href="javascript:void(0);">${i+1}</a></li>`;
  }

  $rewards_pager.append(prev + pagers + next);

  $(".rewards_prev").click(function () {
    rewards_query(rewards_cur_page - 1);
  });

  $(".rewards_next").click(function () {
    rewards_query(rewards_cur_page + 1);
  });

  $(".rewards_pager").click(function () {
    let $pager = $(this);
    let data_page = parseInt($pager.attr("data-page"));
    rewards_query(data_page);
  });
}

function rewards_callback(result, action) {
  if (result) {
    console.log(result);
    show_rewards_page(result);
    build_rewards_pager();
  } else {
    show_msg("no more block", "warning");
  }
}

function rewards_query(page) {
  rewards_cur_page = page;
  let start_block = rewards_cur_page * blocks_per_page;
  let block_num = `${start_block}-${start_block+blocks_per_page-1}`;
  // query and show nodes
  admin_api("admin_rewards", rewards_callback, block_num);
}

/****************
/ jquery ready
*****************/
$(document).ready(function() {
  $("#update_notification").click(function () {
    let notification = $.trim($("#notification").val());

    admin_api("admin_set_notification", update_callback, notification);
  });

  $("#update_mining_settings").click(function () {
    let min_fee = $.trim($("#min_fee").val());
    let max_dispatch = $.trim($("#max_dispatch").val());
    let inc_expire = $.trim($("#inc_expire").val());

    admin_api("admin_settings", update_callback, parseFloat(min_fee), parseInt(max_dispatch), parseFloat(inc_expire));
  });

  miners_query(0);
  $("#miner_email_or_addr").keydown(function(event){
    if (event.which == 13) {
      event.preventDefault();
      miners_query(0);
    }
  });

  nodes_query(0);
  $("#node_email_or_key").keydown(function(event){
    if (event.which == 13) {
      event.preventDefault();
      nodes_query(0);
    }
  });

  rewards_query(0);
});
</script>
{% endblock %}
